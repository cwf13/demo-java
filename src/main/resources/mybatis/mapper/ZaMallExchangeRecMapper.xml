<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cooc.demo.mapper.ZaMallExchangeRecMapper">
    <resultMap id="BaseResultMap" type="cooc.demo.model.ZaMallExchangeRec">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="orderCode" property="ordercode" jdbcType="VARCHAR"/>
        <result column="objId" property="objid" jdbcType="BIGINT"/>
        <result column="userId" property="userid" jdbcType="BIGINT"/>
        <result column="titile" property="titile" jdbcType="VARCHAR"/>
        <result column="pay" property="pay" jdbcType="DECIMAL"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="createTime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="text" property="text" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="DECIMAL"/>
        <result column="platform" property="platform" jdbcType="VARCHAR"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="openId" property="openid" jdbcType="VARCHAR"/>
        <result column="des" property="des" jdbcType="VARCHAR"/>
        <result column="payType" property="paytype" jdbcType="INTEGER"/>
        <result column="logisticsCode" property="logisticscode" jdbcType="VARCHAR"/>
        <result column="sum" property="sum" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, orderCode, objId, userId, titile, pay, type, status, createTime, memo, text,
        money, platform, ip, openId, des, payType, logisticsCode, sum
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from za_mall_exchange_rec
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from za_mall_exchange_rec
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="cooc.demo.model.ZaMallExchangeRec">
        insert into za_mall_exchange_rec (id, orderCode, objId,
        userId, titile, pay,
        type, status, createTime,
        memo, text, money,
        platform, ip, openId,
        des, payType, logisticsCode,
        sum)
        values (#{id,jdbcType=BIGINT}, #{ordercode,jdbcType=VARCHAR}, #{objid,jdbcType=BIGINT},
        #{userid,jdbcType=BIGINT}, #{titile,jdbcType=VARCHAR}, #{pay,jdbcType=DECIMAL},
        #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
        #{memo,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL},
        #{platform,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
        #{des,jdbcType=VARCHAR}, #{paytype,jdbcType=INTEGER}, #{logisticscode,jdbcType=VARCHAR},
        #{sum,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cooc.demo.model.ZaMallExchangeRec">
        insert into za_mall_exchange_rec
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ordercode != null">
                orderCode,
            </if>
            <if test="objid != null">
                objId,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="titile != null">
                titile,
            </if>
            <if test="pay != null">
                pay,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="memo != null">
                memo,
            </if>
            <if test="text != null">
                text,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="platform != null">
                platform,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="openid != null">
                openId,
            </if>
            <if test="des != null">
                des,
            </if>
            <if test="paytype != null">
                payType,
            </if>
            <if test="logisticscode != null">
                logisticsCode,
            </if>
            <if test="sum != null">
                sum,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="ordercode != null">
                #{ordercode,jdbcType=VARCHAR},
            </if>
            <if test="objid != null">
                #{objid,jdbcType=BIGINT},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="titile != null">
                #{titile,jdbcType=VARCHAR},
            </if>
            <if test="pay != null">
                #{pay,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="text != null">
                #{text,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=DECIMAL},
            </if>
            <if test="platform != null">
                #{platform,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                #{des,jdbcType=VARCHAR},
            </if>
            <if test="paytype != null">
                #{paytype,jdbcType=INTEGER},
            </if>
            <if test="logisticscode != null">
                #{logisticscode,jdbcType=VARCHAR},
            </if>
            <if test="sum != null">
                #{sum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cooc.demo.model.ZaMallExchangeRec">
        update za_mall_exchange_rec
        <set>
            <if test="ordercode != null">
                orderCode = #{ordercode,jdbcType=VARCHAR},
            </if>
            <if test="objid != null">
                objId = #{objid,jdbcType=BIGINT},
            </if>
            <if test="userid != null">
                userId = #{userid,jdbcType=BIGINT},
            </if>
            <if test="titile != null">
                titile = #{titile,jdbcType=VARCHAR},
            </if>
            <if test="pay != null">
                pay = #{pay,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="text != null">
                text = #{text,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="platform != null">
                platform = #{platform,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                openId = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                des = #{des,jdbcType=VARCHAR},
            </if>
            <if test="paytype != null">
                payType = #{paytype,jdbcType=INTEGER},
            </if>
            <if test="logisticscode != null">
                logisticsCode = #{logisticscode,jdbcType=VARCHAR},
            </if>
            <if test="sum != null">
                sum = #{sum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cooc.demo.model.ZaMallExchangeRec">
        update za_mall_exchange_rec
        set orderCode = #{ordercode,jdbcType=VARCHAR},
        objId = #{objid,jdbcType=BIGINT},
        userId = #{userid,jdbcType=BIGINT},
        titile = #{titile,jdbcType=VARCHAR},
        pay = #{pay,jdbcType=DECIMAL},
        type = #{type,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        createTime = #{createtime,jdbcType=TIMESTAMP},
        memo = #{memo,jdbcType=VARCHAR},
        text = #{text,jdbcType=VARCHAR},
        money = #{money,jdbcType=DECIMAL},
        platform = #{platform,jdbcType=VARCHAR},
        ip = #{ip,jdbcType=VARCHAR},
        openId = #{openid,jdbcType=VARCHAR},
        des = #{des,jdbcType=VARCHAR},
        payType = #{paytype,jdbcType=INTEGER},
        logisticsCode = #{logisticscode,jdbcType=VARCHAR},
        sum = #{sum,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>